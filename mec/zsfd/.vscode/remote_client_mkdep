# makefile for remote client test
# vscode

workspaceFolder = .
targetName = remote_client
subFolders = updater

ifeq ($(ARM), 1)
CC	= aarch64-linux-gcc
CXX	= aarch64-linux-g++
platform = arm64
else
CC	= gcc
CXX	= g++
platform = x86
endif

ifeq ($(DEBUG), 1)
dbgrel = dbg
else
dbgrel = rel
endif

targetFolder = $(workspaceFolder)/targets
OBJDIR_ROOT	= $(targetFolder)/$(platform)-objs-$(dbgrel)
ZASSYS = $(workspaceFolder)/../zassys/$(platform)

INCS	= -I$(workspaceFolder)/inc -I$(ZASSYS)/include
INCS	+= -I$(workspaceFolder)/test/remote_client -I$(workspaceFolder)/test/remote_client/common

CFLAGS	= $(INCS)
CXXFLAGS= $(CFLAGS)

SRCDIR = $(workspaceFolder)/test/remote_client
DEPDIR = $(OBJDIR_ROOT)/$(SRCDIR)

DEP = $(patsubst %.cpp, %.d, $(wildcard $(SRCDIR)/*.cpp))
DEP += $(patsubst %.cpp, %.d, $(wildcard $(SRCDIR)/common/*.cpp))
DEP += $(patsubst %.cpp, %.d, $(wildcard $(SRCDIR)/proto/*.cpp))
DEP += $(patsubst %.cpp, %.d, $(wildcard $(SRCDIR)/proxy/*.cpp))


DEPS = $(addprefix $(OBJDIR_ROOT)/, $(DEP))
DEPDIRS += $(addprefix $(DEPDIR)/, common)
DEPDIRS += $(addprefix $(DEPDIR)/, proto)
DEPDIRS += $(addprefix $(DEPDIR)/, proxy)



.PHONY: depmkdir clean

all: depmkdir $(DEPS)

depmkdir:
	@echo build dependency: $(targetName)
	@mkdir -p $(DEPDIRS)

clean:
	rm -rf $(DEPDIR)

#	$(filter %.cpp,$(srcFiles))

$(DEPDIR)/%.d: $(SRCDIR)/%.cpp
	@set -e; rm -f $@; \
	$(CXX) -MM $(CXXFLAGS) $< > $@.$$$$; \
	sed 's,\($(notdir $*)\)\.o[ :]*,$(dir $@)\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$
