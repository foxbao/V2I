# makefile for zas-mapcore
# vscode

workspaceFolder = .

targetName = map-proto
targetVersion = 1.0.0

ifeq ($(ARM), 1)
CC	= aarch64-linux-gcc
CXX	= aarch64-linux-g++
platform = arm64
else
CC	= gcc
CXX	= g++
platform = x86
endif

targetFolder = $(workspaceFolder)/targets

ifeq ($(DEBUG), 1)
dbgrel = dbg
OPTS= -g -O0 -DDEBUG
else
dbgrel = rel
OPTS= -O3
endif

OBJDIR_ROOT	= $(targetFolder)/$(platform)-objs-$(dbgrel)
TARGET_ROOT	= $(targetFolder)/$(platform)-$(dbgrel)
LINK_PATH = $(targetFolder)/$(platform)-$(dbgrel)

Target = $(TARGET_ROOT)/lib$(targetName).so
SRCDIR = $(workspaceFolder)/$(targetName)
OBJDIR = $(OBJDIR_ROOT)/$(SRCDIR)

INCS	= -I$(SRCDIR) -I$(workspaceFolder)/inc -I$(workspaceFolder)/inc/$(targetName)

LIBS	= -lprotobuf
LIBINC	= -L$(TARGET_ROOT) -Wl,-rpath-link $(LINK_PATH)

CFLAGS	= -fPIC $(OPTS) $(INCS) -DLINUX -DLIBMAPPROTO
CXXFLAGS= $(CFLAGS)

LDFLAGS	= -shared

OBJ = $(patsubst %.cpp, %.o, $(wildcard $(SRCDIR)/*.cpp))
OBJ += $(patsubst %.cc, %.o, $(wildcard $(SRCDIR)/autogen/*.cc))
OBJS = $(addprefix $(OBJDIR_ROOT)/, $(OBJ))

DEPS = $(patsubst %.o, %.d, $(OBJS))

all: objmkdir $(Target)

include $(DEPS)

$(Target): $(OBJS)
	$(CXX) $(LDFLAGS) $^ -o $@ $(LIBS) $(LIBINC)

$(OBJDIR)/%.o: $(SRCDIR)/%.cc
	$(CXX) $(CXXFLAGS) -c $< -o $@
	@set -e; $(CXX) -MM $(INCS) $< > $(patsubst %o, %d, $@).$$$$; \
	sed 's,\($(notdir $*)\)\.o[ :]*,$(dir $@)\1.o $(patsubst %o, %d, $@) : ,g' < $(patsubst %o, %d, $@).$$$$ > $(patsubst %o, %d, $@); \
	rm -f $(patsubst %o, %d, $@).$$$$

$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@
	@set -e; $(CXX) -MM $(INCS) $< > $(patsubst %o, %d, $@).$$$$; \
	sed 's,\($(notdir $*)\)\.o[ :]*,$(dir $@)\1.o $(patsubst %o, %d, $@) : ,g' < $(patsubst %o, %d, $@).$$$$ > $(patsubst %o, %d, $@); \
	rm -f $(patsubst %o, %d, $@).$$$$

.PHONY: objmkdir clean

objmkdir:
	@echo build: $(targetName)
	@mkdir -p $(TARGET_ROOT)

clean:
	rm -rf $(Target)
	rm -rf $(OBJDIR)
